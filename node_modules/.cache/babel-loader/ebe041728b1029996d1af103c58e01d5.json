{"ast":null,"code":"var _jsxFileName = \"/home/bruno/threeJs/threejs/src/components/Lights/index.js\";\nimport React, { useMemo, useRef, useState } from \"react\";\nimport { random } from \"lodash\";\nimport { useFrame } from \"react-three-fiber\";\nexport default (() => {\n  const esquerda = useRef();\n  const position = useMemo(() => {\n    return [0, 0.2, 0];\n  }, []);\n  const positionEsq = useMemo(() => {\n    return [-2, -0.5, 0];\n  }, []);\n  const timeMod = useMemo(() => random(0.1, 4, true), []);\n\n  const FakeSphere = () => {\n    return /*#__PURE__*/React.createElement(\"mesh\", {\n      position: position,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"sphereBufferGeometry\", {\n      args: [0.7, 30, 30],\n      attach: \"geometry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n      color: 0xfff1ef,\n      attach: \"material\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const FakeSphere2 = () => {\n    return /*#__PURE__*/React.createElement(\"mesh\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"coneBufferGeometry\", {\n      args: [0.9, 2, 10],\n      attach: \"geometry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n      color: \"#333\",\n      attach: \"material\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  useFrame(() => {\n    esquerda.current.rotation.z = -1;\n  });\n\n  const PartedeCima = () => {\n    return /*#__PURE__*/React.createElement(\"mesh\", {\n      position: position,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n      args: [6, 0.4, 0.5],\n      attach: \"geometry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n      color: 0xfff1ef,\n      attach: \"material\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const ParteEsquerda = () => {\n    return /*#__PURE__*/React.createElement(\"mesh\", {\n      ref: esquerda,\n      position: positionEsq,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n      args: [6, 0.4, 0.5],\n      attach: \"geometry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n      color: 0xfff1ef,\n      attach: \"material\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"group\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ParteEsquerda, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FakeSphere2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PartedeCima, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 0.1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    intensity: 1.12,\n    position: [0, 0, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["/home/bruno/threeJs/threejs/src/components/Lights/index.js"],"names":["React","useMemo","useRef","useState","random","useFrame","esquerda","position","positionEsq","timeMod","FakeSphere","FakeSphere2","current","rotation","z","PartedeCima","ParteEsquerda"],"mappings":"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","sourcesContent":["import React, { useMemo, useRef, useState } from \"react\";\nimport { random } from \"lodash\";\nimport { useFrame } from \"react-three-fiber\";\n\nexport default () => {\n  const esquerda = useRef();                                  \n \n \n\n  const position = useMemo(() => {\n    return [0, 0.2, 0];\n  }, []);\n  \n  const positionEsq = useMemo(() => {\n    return [-2, -0.5, 0];\n  }, []);\n\n  const timeMod = useMemo(() => random(0.1, 4, true), []);\n\n  const FakeSphere = () => {\n    return (\n      <mesh\n      position={position}\n      >       \n        <sphereBufferGeometry args={[0.7, 30, 30]} attach=\"geometry\" />\n        <meshBasicMaterial color={0xfff1ef} attach=\"material\" />\n\n      </mesh>\n    );\n  };\n  const FakeSphere2 = () => {\n    return (\n      <mesh>      \n        <coneBufferGeometry args={[0.9, 2, 10]} attach=\"geometry\" />\n        <meshBasicMaterial color=\"#333\" attach=\"material\" />\n\n      </mesh>\n    );\n  };\n  \n  useFrame(() => {\n    esquerda.current.rotation.z = -1 ;\n\n  });\n \n  const PartedeCima = () => {\n    return (\n      <mesh  position={position} >       \n        <boxBufferGeometry args={[6, 0.4, 0.5]} attach=\"geometry\" />\n        <meshBasicMaterial color={0xfff1ef} attach=\"material\" />\n\n      </mesh>\n    );\n  };\n\n  const ParteEsquerda = () => {\n    return (\n      <mesh ref={esquerda} position={positionEsq} >       \n        <boxBufferGeometry args={[6, 0.4, 0.5]} attach=\"geometry\" />\n        <meshBasicMaterial color={0xfff1ef} attach=\"material\" />\n\n      </mesh>\n    );\n  };\n\n\n\n  return (\n    <group>\n      {/* <FakeSphere /> */}\n      <ParteEsquerda />\n      <FakeSphere2 />\n     \n      <PartedeCima />\n      <ambientLight intensity={0.1} />\n      <pointLight intensity={1.12} position={[0, 0, 0]} />\n    </group>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}